{"version":3,"sources":["../node_modules/_@babel_runtime@7.9.2@@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/_@babel_runtime@7.9.2@@babel/runtime/helpers/esm/createClass.js","../node_modules/_@babel_runtime@7.9.2@@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/_@babel_runtime@7.9.2@@babel/runtime/helpers/esm/typeof.js","../node_modules/_@babel_runtime@7.9.2@@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/_@babel_runtime@7.9.2@@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/_@babel_runtime@7.9.2@@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/_@babel_runtime@7.9.2@@babel/runtime/helpers/esm/inherits.js","routes/posts/2019-08-01-typescript-redux/document.mdx"],"names":["_classCallCheck","instance","Constructor","TypeError","__webpack_require__","d","__webpack_exports__","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_typeof","obj","Symbol","iterator","constructor","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_setPrototypeOf","p","_inherits","subClass","superClass","create","value","readingTime","text","minutes","time","words","MDXContent","_this","_Users_qingtong_work_personal_qingtong_blog_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_super","layout","_this$props","components","_Users_qingtong_work_personal_qingtong_blog_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_7__","name","parentName","src","alt","href","id","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","React","Component","tableOfContents","arguments","undefined","level","title","children","frontMatter"],"mappings":"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","file":"static/js/16.db01a2a8.chunk.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","\nimport React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\nexport const readingTime = {\"text\":\"6 min read\",\"minutes\":5.065,\"time\":303900.00000000006,\"words\":1013}\n\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://github.com/wulucxy/blog/raw/master/src/routes/posts/2019-08-01-typescript-redux/image/ts.png\",\"alt\":\"image\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`TLDR: 文章比较长，可以跳过直接`}<MDXTag name=\"a\" components={components} parentName=\"strong\" props={{\"href\":\"https://wulucxy.github.io/redux-typescript-guide/\"}}>{`查看 Demo`}</MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"前言\"}}>{`前言`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`typescript 是一个有着类型定义的 js 语言的超集。typescript 支持最新的 ESMAScript 特性，并且支持泛型、类型定义等静态语言特征，`}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`是为了大规模应用而生`}</MDXTag>{`。我们团队之前在内部一些项目中初步尝试了 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`React + Redux + TypeScript`}</MDXTag>{` 组合。本文则尝试梳理基于 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`typescript`}</MDXTag>{` 如何更合理的架构 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`redux`}</MDXTag>{`。`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"一-环境配置\"}}>{`一. 环境配置`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`当前 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ts + react`}</MDXTag>{` 项目基础配置如下：`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`编译：@babel/preset-typescript`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`开发、打包：parcel`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`语法校验：eslint、tsc`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`其中引入 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`babel/preset`}</MDXTag>{` 来替代 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ts-loader`}</MDXTag>{`，这样既解决了 ts 工程化构建效率问题，同时不影响类型校验，还统一了编译工具。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`接入 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`babel`}</MDXTag>{` 以后，需要对 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`tsconfig`}</MDXTag>{` 规则稍作修改，此时 ts 的定位仅仅是类型校验，代码编译的工作就完全交给 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`babel`}</MDXTag>{` 来处理了。`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`tsconfig.json`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-json\",\"data-language\":\"json\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"compilerOptions\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 解析为最新版本的es版本，babel 负责后续的编译</span>\\n    <span class=\\\"token property\\\">\\\"target\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"esnext\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"module\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"esnext\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token comment\\\">// ts 的解析规则</span>\\n    <span class=\\\"token property\\\">\\\"lib\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"esnext\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"dom\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token comment\\\">// 绝对地址按照 node_modules 解析</span>\\n    <span class=\\\"token property\\\">\\\"moduleResolution\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"node\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token comment\\\">// 开启 jsx</span>\\n    <span class=\\\"token property\\\">\\\"jsx\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"react\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token comment\\\">// 不执行构建，交由 babel 执行</span>\\n    <span class=\\\"token property\\\">\\\"noEmit\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token comment\\\">// 严格模式，包括 strictNullChecks &amp; noImplicitAny.</span>\\n    <span class=\\\"token property\\\">\\\"strict\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token comment\\\">// 跳过三方包检查</span>\\n    <span class=\\\"token property\\\">\\\"skipLibCheck\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token comment\\\">// any 类型不警告</span>\\n    <span class=\\\"token property\\\">\\\"noImplicitAny\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token comment\\\">// 关闭 null 严格检查</span>\\n    <span class=\\\"token property\\\">\\\"strictNullChecks\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token comment\\\">// 将每个文件作为单独的模块</span>\\n    <span class=\\\"token property\\\">\\\"isolatedModules\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token comment\\\">// Import non-ES modules as default imports.</span>\\n    <span class=\\\"token property\\\">\\\"esModuleInterop\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"include\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"src\\\"</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`接下来还需要配置 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`eslint`}</MDXTag>{` 规则：`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`.eslintrc`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-json\",\"data-language\":\"json\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"parser\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"@typescript-eslint/parser\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"parserOptions\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"project\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"./tsconfig.json\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"ecmaVersion\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">2018</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"extends\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token string\\\">\\\"@npm/standard/react\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token string\\\">\\\"plugin:@typescript-eslint/recommended\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token string\\\">\\\"prettier\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token string\\\">\\\"prettier/@typescript-eslint\\\"</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"plugins\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"@typescript-eslint\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"rules\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 自定义 lint 规则</span>\\n    <span class=\\\"token property\\\">\\\"react/prop-types\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"@typescript-eslint/no-explicit-any\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"warn\\\"</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n <span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`最后一步就是在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`package.json`}</MDXTag>{` 里面添加脚本命令了：`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`package.json`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-json\",\"data-language\":\"json\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token property\\\">\\\"scripts\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"start\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"parcel src/public/index.html --open\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"prebuild\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"npm run build:clean\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"build:clean\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"rimraf ./dist\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"build\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"parcel build src/public/index.html --no-source-maps\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"lint\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"eslint src --fix --format codeframe\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"lint-staged\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"lint-staged\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"ts-compile-check\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"tsc --pretty -p tsconfig.json\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`以上，我们就实现了一套完整工程化能力的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`typescript`}</MDXTag>{` 开发环境了。`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`let’s RUN~~~`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://github.com/wulucxy/blog/raw/master/src/routes/posts/2019-08-01-typescript-redux/image/run.png\",\"alt\":\"run\"}}></MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"二-数据和分层\"}}>{`二. 数据和分层`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"1-目录结构\"}}>{`1. 目录结构`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`目录即分层，一个好的目录结构能够让我们在开发中更加得心应手。在开发 redux 应用中，有一种普遍的做法是根据 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`action`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`reducer`}</MDXTag>{` 功能进行分层，一个典型的应用是这样的：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`.\n|-- actions             // 全局 action\n|-- components          // 公共组件\n|   |-- Footer.tsx\n|   |-- Header.tsx\n|-- pages               // 页面\n|   |-- home\n|      |-- components  // 组件入口  \n|      \\`-- index.tsx   // 页面入口 \n|-- reducers           // 全局 reducer\n|-- store              // store 入口\n|-- types.d.ts         // 三方类型声明\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`在实际开发中，开发往往会在不同文件中来回跳跃，尤其是当项目文件膨胀以后，在不同文件中跳跃式寻找会占据很大比例的时间。基于此，社区开始流行另外一种开发方式，俗称「ducks」规则，简而言之就是将 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`action`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`reducer`}</MDXTag>{`，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`actionType`}</MDXTag>{` 放在一起进行管理，`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/erikras/ducks-modular-redux\"}}>{`参考链接`}</MDXTag>{`。 其中 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ducks`}</MDXTag>{` 命名来自于`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`redux`}</MDXTag>{` 结尾音。`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`ducks`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`.\n|-- components           // 公共组件\n|   |-- Footer.tsx\n|   |-- Header.tsx\n|-- pages\n|   |-- home\n|   |  |-- index.ts      // 页面入口\n|   |  |-- components    // 组件\n|   |  |-- types.ts      // 类型声明\n|   |  \\`-- reducer.ts    // action/reducer\n|-- store                 // redux store 入口\n|-- types.d.ts            // 三方组件类型声明\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"2-数据不可变性\"}}>{`2. 数据不可变性`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`在 redux 开发中，需要遵循的一个原则是`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`数据不可变性 (immutable)`}</MDXTag>{`，每个 reducer 不能修改原始值，而只能返回一个新的 state。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`在 接触 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`typescript`}</MDXTag>{` 之前，`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://immutable-js.github.io/immutable-js/\"}}>{`immutable.js`}</MDXTag>{` 是结合 redux 实现数据不可变的最佳辅助工具。然而，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`immutable.js`}</MDXTag>{` 对 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ts`}</MDXTag>{` 的支持就一言难尽了，这两者都是很好的工具，但是放在一起，却是那么的不合适。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`所以我们在实际项目中尝试了使用 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/immerjs/immer\"}}>{`immer`}</MDXTag>{` 来实现数据持久化，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`immer`}</MDXTag>{` 通过 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`proxy`}</MDXTag>{` 实现了用原生 js 语法实现了数据不可变。虽然写起来没有像 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`immutable.js`}</MDXTag>{` 函数式写法那么爽，但至少能用。`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`后续，我们仍然会探索基于 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`immutable.js`}</MDXTag>{` 的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`typescript`}</MDXTag>{` 写法，不再本文范畴之内。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"3-store\"}}>{`3. Store`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`在 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Store`}</MDXTag>{` 中我们将 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`reducer`}</MDXTag>{` 进行聚合，并对外导出应用级别的状态数据。`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`src/store/root-reducers.ts`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token comment\\\">// 页面 reducer 聚合</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> ReducersMapObject <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"redux\\\"</span>\\n<span class=\\\"token comment\\\">// 导入每个页面独立的 reducer 和 类型声明</span>\\n<span class=\\\"token keyword\\\">import</span> bitcoin <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"../pages/basic/reducer\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> BitcoinState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"../pages/basic/types\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 应用级数据类型接口</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">AppState</span> <span class=\\\"token punctuation\\\">{</span>\\n  bitcoin<span class=\\\"token operator\\\">:</span> BitcoinState<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> reducers<span class=\\\"token operator\\\">:</span> ReducersMapObject <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  bitcoin\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> reducers \\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`src/store/create.ts`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token comment\\\">// 导入 redux 和 immer 相应的方法</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> createStore<span class=\\\"token punctuation\\\">,</span> Reducer <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'redux'</span>\\n<span class=\\\"token keyword\\\">import</span> produce <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"immer\\\"</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> combineReducers <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"redux-immer\\\"</span>\\n\\n<span class=\\\"token comment\\\">// 聚合后的 reducer 和顶层应用数据</span>\\n<span class=\\\"token keyword\\\">import</span> reducers<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> AppState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./root-reducer\\\"</span>\\n\\n<span class=\\\"token comment\\\">// 通过 combineReducer 将 reducer 合并为一</span>\\n<span class=\\\"token comment\\\">// 注意这里的 combineReducers 是基于 immer 的实现</span>\\n<span class=\\\"token keyword\\\">const</span> rootReducer<span class=\\\"token operator\\\">:</span> Reducer<span class=\\\"token operator\\\">&lt;</span>AppState<span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">combineReducers</span><span class=\\\"token punctuation\\\">(</span>produce<span class=\\\"token punctuation\\\">,</span> reducers<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token comment\\\">// 导出 store</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">initialState <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">createStore</span><span class=\\\"token punctuation\\\">(</span>\\n    rootReducer<span class=\\\"token punctuation\\\">,</span>\\n    initialState<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token function\\\">applyMiddleware</span><span class=\\\"token punctuation\\\">(</span>Thunk<span class=\\\"token punctuation\\\">,</span> promiseMiddleware<span class=\\\"token punctuation\\\">,</span> Logger<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"4-声明类型文件-dts\"}}>{`4. 声明类型文件 .d.ts`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`我们在项目中会依赖到很多三方、二方包仍然是用纯 js 实现的，将这些代码重构为 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`typescript`}</MDXTag>{` 显然是不现实的，ts 的做法是我们可以声明 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.d.ts`}</MDXTag>{` 类型文件将三方包引入到 ts 工程中。`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.d.ts`}</MDXTag>{` 中 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`d`}</MDXTag>{` 的含义是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`declaration`}</MDXTag>{` 即声明，实际使用我们无需关注具体实现，而只需要导出类型声明即可。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`最简单的声明文件是这样的：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`declare module '@npm/r3'\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`但是如果你的项目中类型声明非常重要的话，建议到 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/DefinitelyTyped/DefinitelyTyped\"}}>{`DefinitelyTyped`}</MDXTag>{` 查看更多优质类型定义文件，并贡献自己的力量。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`在声明类型文件还有一种`}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`取巧的做法`}</MDXTag>{`是定义全局类型，全局类型无需导入即可对所有文件可见，举例：`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`typing.d.ts`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`interface IUser {\n  name: string\n  phone: number\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`定义好之后你在任意文件中都可以直接使用该类型。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`实际上这样做有可商榷之处，在导入三方类型声明的文件中，用来声明当前应用的全局类型。这样的做法 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://stackoverflow.com/questions/42233987/how-to-configure-custom-global-interfaces-d-ts-files-for-typescript\"}}>{`社区并不推荐`}</MDXTag>{`。实际上你应该定义一个独立的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`.ts`}</MDXTag>{` 文件，然后通过 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`export/import`}</MDXTag>{` 来引用。`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"三-reducer\"}}>{`三. reducer`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`前面我们提到将 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`reducer`}</MDXTag>{`，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`action`}</MDXTag>{`，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`actionType`}</MDXTag>{` 按照 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ducks`}</MDXTag>{` 规则统一到一个文件中管理, 并且将`}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`类型声明`}</MDXTag>{`也统一到一个文件。接下来我们展开来介绍这部分内容：`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"1-types\"}}>{`1. types`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`actionType`}</MDXTag>{` 是一种可枚举类型：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">enum</span> BitcoinActionTypes <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// 请求比特币周期价格指数</span>\\n  <span class=\\\"token constant\\\">BITCOIN_QUERY_LIST</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"BITCOIN_QUERY_LIST\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token comment\\\">// 请求比特币当前价格</span>\\n  <span class=\\\"token constant\\\">BITCOIN_QUERY_CURRENCY</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"BITCOIN_QUERY_CURRENCY\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token comment\\\">// 设置当前过滤条件</span>\\n  <span class=\\\"token constant\\\">BITCOIN_SET_FILTER</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"BITCOIN_SET_FILTER\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`通过枚举类型结合 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`typescript`}</MDXTag>{` 的强类型自动推导能力，可以实现开发自动输入补全：\n`}<MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://github.com/wulucxy/blog/raw/master/src/routes/posts/2019-08-01-typescript-redux/image/infer.png\",\"alt\":\"enum\"}}></MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"2-actions\"}}>{`2. actions`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`redux 中的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`action`}</MDXTag>{` 分为两类：同步和异步。`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`同步 action`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> BitcoinActionTypes <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./types\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">setFilterType</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">filterType<span class=\\\"token operator\\\">:</span> string</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  type<span class=\\\"token operator\\\">:</span> BitcoinActionTypes<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">BITCOIN_SET_FILTER</span><span class=\\\"token punctuation\\\">,</span>\\n  payload<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> filterType <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`借助 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`typeof`}</MDXTag>{` 关键词，我们在`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`types`}</MDXTag>{` 文件中非常方便地导出类型：`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`types.ts`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> setFilterType <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./reducer\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> type SetFilterType <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">typeof</span> setFilterType<span class=\\\"token punctuation\\\">;</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`异步 action`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`在项目中我们使用了 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/pburtchaell/redux-promise-middleware\"}}>{`redux-promise-middleware`}</MDXTag>{` 进行异步 action 的管理，异步 action 会返回 promise，但是写法仍然沿用同步 action 的写法。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> AsyncAction <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"redux-promise-middleware\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> queryBPICurrency <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token parameter\\\">AsyncAction</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    type<span class=\\\"token operator\\\">:</span> BitcoinActionTypes<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">BITCOIN_QUERY_CURRENCY</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token comment\\\">// 这里这里payload 实际返回的是 promise</span>\\n    payload<span class=\\\"token operator\\\">:</span> axios<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"//api.coindesk.com/v1/bpi/currentprice/cny.json\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`注意这里的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`AsyncAction`}</MDXTag>{` 来自 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`redux-promise-middleware`}</MDXTag>{` 的 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/pburtchaell/redux-promise-middleware/blob/master/src/index.d.ts\"}}>{`类型定义`}</MDXTag>{`。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`通过 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`typeof`}</MDXTag>{` 类型推导:`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`types.ts`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> queryBPI <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./reducer\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> type QueryBPI <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">typeof</span> queryBPI\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`结果如下：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`type QueryBPI = (params: BPIParams) => AsyncAction\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"3reducer\"}}>{`3.reducer`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`结合`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`redux-promise-middleware`}</MDXTag>{`，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`type-to-reducer`}</MDXTag>{` 和 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`immer`}</MDXTag>{`，我们来完成具备类型的 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`reducer`}</MDXTag>{`。`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`types.ts`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token comment\\\">// state 类型</span>\\n<span class=\\\"token comment\\\">// 其中 Record 泛型是 `{ [key: string]: T }` 的简写</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">BitcoinState</span> <span class=\\\"token punctuation\\\">{</span>\\n  filterType<span class=\\\"token operator\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  requestLoading<span class=\\\"token operator\\\">:</span> boolean<span class=\\\"token punctuation\\\">;</span>\\n  currentPrice<span class=\\\"token operator\\\">:</span> Record<span class=\\\"token operator\\\">&lt;</span>string<span class=\\\"token punctuation\\\">,</span> BitcoinPrice<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`reducer.ts`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">import</span> typeToReducer <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"type-to-reducer\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> BitcoinActionTypes<span class=\\\"token punctuation\\\">,</span> BPIParams <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./types\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 导出 reducer</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token function\\\">typeToReducer</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token comment\\\">// 同步 action</span>\\n  <span class=\\\"token punctuation\\\">[</span>BitcoinActionTypes<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">BITCOIN_SET_FILTER</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">state<span class=\\\"token punctuation\\\">,</span> action</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> filterType <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> action<span class=\\\"token punctuation\\\">.</span>payload<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// immer 包装后可以直接用原生 js 修改值</span>\\n    state<span class=\\\"token punctuation\\\">.</span>filterType <span class=\\\"token operator\\\">=</span> filterType<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> state<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token comment\\\">// 异步action</span>\\n  BitcoinActionTypes<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">BITCOIN_QUERY_CURRENCY</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function-variable function\\\">PENDING</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">state<span class=\\\"token punctuation\\\">,</span> action</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      state<span class=\\\"token punctuation\\\">.</span>requestLoading <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span>\\n      <span class=\\\"token keyword\\\">return</span> state\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token function-variable function\\\">FULFILLED</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">state<span class=\\\"token punctuation\\\">,</span> action</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> bpi <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> action<span class=\\\"token punctuation\\\">.</span>payload<span class=\\\"token punctuation\\\">;</span>\\n      state<span class=\\\"token punctuation\\\">.</span>currentPrice <span class=\\\"token operator\\\">=</span> bpi<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">return</span> state<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">)</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"四-连接组件\"}}>{`四. 连接组件`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`接下来我们将类型化后的 redux 连接到 React 组件：`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"1-connect-连接\"}}>{`1. connect 连接`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`react 组件和 redux 通过 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`react-redux`}</MDXTag>{` 的 connect 方法进行连接：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> connect <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react-redux\\\"</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> AppState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"../../store/root-reducer\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 导入类型</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>\\n  SetFilterType<span class=\\\"token punctuation\\\">,</span>\\n  QueryBPICurrency<span class=\\\"token punctuation\\\">,</span>\\n  QueryBPI<span class=\\\"token punctuation\\\">,</span>\\n  BitcoinState<span class=\\\"token punctuation\\\">,</span>\\n  BPIParams\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./types\\\"</span>\\n\\n<span class=\\\"token comment\\\">// 类型扩展</span>\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">BasicProps</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">BitcoinState</span> <span class=\\\"token punctuation\\\">{</span>\\n  setFilterType<span class=\\\"token operator\\\">:</span> SetFilterType<span class=\\\"token punctuation\\\">;</span>\\n  queryBPICurrency<span class=\\\"token operator\\\">:</span> QueryBPICurrency<span class=\\\"token punctuation\\\">;</span>\\n  queryBPI<span class=\\\"token operator\\\">:</span> QueryBPI<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// 这里通过 Class 组件引入类型</span>\\n<span class=\\\"token comment\\\">// 如果是函数式组件，就使用 React.FC&lt;BasicProps> 声明类型</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Basic</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span><span class=\\\"token operator\\\">&lt;</span>BasicProps<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// do something</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// 将 state 数据导出为属性</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">select</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">state<span class=\\\"token operator\\\">:</span> AppState</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> bitcoin <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> state<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    requestLoading<span class=\\\"token operator\\\">:</span> bitcoin<span class=\\\"token punctuation\\\">.</span>requestLoading<span class=\\\"token punctuation\\\">,</span>\\n    filterType<span class=\\\"token operator\\\">:</span> bitcoin<span class=\\\"token punctuation\\\">.</span>filterType<span class=\\\"token punctuation\\\">,</span>\\n    currentPrice<span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">(</span>bitcoin<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"currentPrice.CNY\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// 最后一步：完成 redux 和 组件的连接</span>\\n<span class=\\\"token comment\\\">// 顺便导入一下 action</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token function\\\">connect</span><span class=\\\"token punctuation\\\">(</span>\\n  select<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    setFilterType<span class=\\\"token punctuation\\\">,</span>\\n    queryBPI<span class=\\\"token punctuation\\\">,</span>\\n    queryBPICurrency\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>Basic<span class=\\\"token punctuation\\\">)</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`到此，我们就基本上完成了一个 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`typescript + redux + react`}</MDXTag>{` 的应用，`}<MDXTag name=\"em\" components={components} parentName=\"p\">{`源码后续会放出`}</MDXTag>{`。`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"总结\"}}>{`总结`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`这 ts 有什么用，限制多，运行慢，除了带给我一堆警告，还有什么作用？`}</MDXTag>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`ts 类型声明这么复杂，还引入了这么多新概念，跟框架兼容性又这么差`}</MDXTag>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`我就是辞职，不写前端了，也特么不用巨硬造的假 java`}</MDXTag>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`……`}</MDXTag>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`ts 真香，再也不想用 js 了。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`学习 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`typescript`}</MDXTag>{` 是一段漫长的旅程，学习 ts 语法并不难，难的是框架对 ts 的支持度。以 React 为例，单单写一个 redux 版本的基础应用就踩了很多坑，甚至为了写 ts 不得不抛弃了`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`immutable.js`}</MDXTag>{`  — 一个数据不可变函数式工具，更不用提社区数量繁多的其他三方库了。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`ts 不是银弹，ts 无法解决你的代码结构问题，也不能避免语法 Bug，`}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`”彼之蜜糖,吾之毒药“`}</MDXTag>{`，当 ts 类型使用不当的时候，强行接入反而会给你造成更大的困扰。`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`ts 适合什么场景？`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`我个人认为:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`中大型项目，需要长期维护的项目，底层库 or 框架`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">\n<MDXTag name=\"p\" components={components} parentName=\"li\">{`上一条的前提是，项目主要依赖的类库对 ts 支持良好，最好有业界的先行案例`}</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`所以用一些冷门框架或者小项目的时候我是不建议使用 ts 的，ts 没问题，框架也没问题，框架+ ts 会有很多问题。`}</MDXTag>\n           </MDXTag>\n  }\n}\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"前言\",\n    level: 3,\n    title: \"前言\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"一-环境配置\",\n    level: 2,\n    title: \"一. 环境配置\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"二-数据和分层\",\n    level: 2,\n    title: \"二. 数据和分层\",\n    children: [\n        {\n              id: \"1-目录结构\",\n              level: 3,\n              title: \"1. 目录结构\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"2-数据不可变性\",\n              level: 3,\n              title: \"2. 数据不可变性\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"3-store\",\n              level: 3,\n              title: \"3. Store\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"4-声明类型文件-dts\",\n              level: 3,\n              title: \"4. 声明类型文件 .d.ts\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"三-reducer\",\n    level: 2,\n    title: \"三. reducer\",\n    children: [\n        {\n              id: \"1-types\",\n              level: 3,\n              title: \"1. types\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"2-actions\",\n              level: 3,\n              title: \"2. actions\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"3reducer\",\n              level: 3,\n              title: \"3.reducer\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"四-连接组件\",\n    level: 2,\n    title: \"四. 连接组件\",\n    children: [\n        {\n              id: \"1-connect-连接\",\n              level: 3,\n              title: \"1. connect 连接\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"总结\",\n    level: 2,\n    title: \"总结\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}