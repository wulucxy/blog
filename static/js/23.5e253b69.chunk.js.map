{"version":3,"sources":["routes/posts/2023-03-30-lowcode-with-ai/document.mdx"],"names":["readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","Object","assign","mdxType","id","parentName","href","src","alt","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","isMDXComponent","tableOfContents","arguments","length","undefined","level","title","children","frontMatter"],"mappings":"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","file":"static/js/23.5e253b69.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"6 min read\",\"minutes\":5.965,\"time\":357900,\"words\":1193}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"背景\"\n    }}>{`背景`}</h2>\n    <p>{`ChatGPT 由 由 Chat 与 GPT 两部分组成。`}</p>\n    <p>{`Chat 不重要，GPT 才重要。`}</p>\n    <p>{`那什么是 GPT，它的全英文是 Generative Pre-trained Transformer。`}</p>\n    <p>{`翻译过来就是「通用」「预训练」Transformer（不是变形金刚哦）。`}</p>\n    <p>{`「通用」代表业务领域，不用多说；`}</p>\n    <p>{`「预训练」简单理解为领域已有知识的汇总，有了这个知识储备，就能快速进入某一个领域；`}</p>\n    <p>{`Transformer 则是真正赋予 ChatGPT 生命力的灵魂，Transformer 是 NLP（自然语言处理）领域的变形金刚，自 2017 年出来以后，将之前如日中天的两大神经网络领域的卷王 RNN（循环神经网络），CNN（卷积神经网络）快卷没了。`}</p>\n    <p>{`真所谓，天下武功，唯卷无敌。`}</p>\n    <p>{`之所以介绍这段背景，是因为创建 Transformer 模型背后的公司也非常了不起，公司名叫 HuggingFace（笑脸）。`}</p>\n    <p>{`HuggingFace 提出 Transformer 模型的时候，NLP 领域的资源还比较匮乏，如日中天的还是 CV（计算机视觉）的各种 XNN，于是 HuggingFace 创建了同名开源社区（`}<a parentName=\"p\" {...{\n        \"href\": \"https://huggingface.co/%EF%BC%89%EF%BC%8C%E5%B9%B6%E5%BE%88%E5%BF%AB%E6%88%90%E4%B8%BA%E4%BA%86\"\n      }}>{`https://huggingface.co/），并很快成为了`}</a>{` AI 领域开源模型、数据集等最大的社区，目前开源模型超过了 160000+，开源数据集也达到了 25000+，是当之无愧的 AI 领域的 github。`}</p>\n    <p>{`ChatGPT 一夜爆火的背后，其实就像黑夜逐渐泛白一样，当数量持续积累并突破阈值之后，时代的变化浩浩荡荡，一个新的时代正在冉冉升起。`}</p>\n    <h2 {...{\n      \"id\": \"低代码和-ai-的关系\"\n    }}>{`低代码和 AI 的关系`}</h2>\n    <p>{`在 chatGPT 出现之前，AI 和低代码的形态就已存在。`}</p>\n    <h3 {...{\n      \"id\": \"1-ai-推理服务\"\n    }}>{`1. AI 推理服务`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/illacloud/illa-builder\"\n      }}>{`ILLA Builder`}</a>{` 是一款面向企业的低代码开发平台，对标（抄袭）的是国外知名的 retool（估计 20 亿美金）。ILLA 提供了连接器（link）的概念，可以快速接入外部数据平台（sql/excel/api）等，其中就包括对接了 huggingface inference api：`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://raw.githubusercontent.com/wulucxy/blog/master/src/assets/imgs/posts/lowcode-with-ai/illa1.png\",\n        \"alt\": \"image\"\n      }}></img></p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://raw.githubusercontent.com/wulucxy/blog/master/src/assets/imgs/posts/lowcode-with-ai/illa2.png\",\n        \"alt\": \"image\"\n      }}></img></p>\n    <p>{`最终实现的效果如下：`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://developer.qcloudimg.com/http-save/yehe-2553644/2606cfe95dd7a4ddbddb009b48f0982a.gif\",\n        \"alt\": \"huggingface\"\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"2-sql-查询\"\n    }}>{`2. sql 查询`}</h3>\n    <p>{`sql 本质上是特定领域（数据库）的一套结构化语言实现，在 chatGPT 之前已经有很多 NLP 模型实现了两者之间的转译，比如浙大发表的论文：`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/yechens/NL2SQL\"\n      }}>{`NL2SQL`}</a>{`，在测试数据集上已经实现了 65.3% 的准确率。`}</p>\n    <p>{`目前基于 GPT 实现 sql 查询产品也不少，比如：`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.sqlchat.ai/\"\n      }}>{`sqlchat`}</a>{`，是国内 DevOps 创业公司 bytebase 基于 chatGPT 推出了第一款交互式的 sql 生成工具。`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://raw.githubusercontent.com/wulucxy/blog/master/src/assets/imgs/posts/lowcode-with-ai/sql.png\",\n        \"alt\": \"image\"\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"3-工作流\"\n    }}>{`3. 工作流`}</h3>\n    <p>{`Retool 把自然语言查询能力直接集成了低代码的「工作流」模块，`}<a parentName=\"p\" {...{\n        \"href\": \"https://retool.com/blog/gpt4-in-retool/\"\n      }}>{`链接`}</a>{`，操作步骤如下：`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://raw.githubusercontent.com/wulucxy/blog/master/src/assets/imgs/posts/lowcode-with-ai/retool.png\",\n        \"alt\": \"image\"\n      }}></img></p>\n    <ol>\n      <li parentName=\"ol\">{`选择数据源（sql/excel 等），设置触发周期（定时任务）`}</li>\n      <li parentName=\"ol\">{`基于 gpt-4 输入文本描述（instruction），设置上下文变量`}</li>\n      <li parentName=\"ol\">{`完成 sql 转译，并输出结果到下一个节点`}</li>\n    </ol>\n    <p>{`工作流 + 物料插件 + AI 模型理论上完全能够实现复杂的业务交互能力，对低代码的能力边界有了更大的想象力。`}</p>\n    <h3 {...{\n      \"id\": \"4-引导式内容生成\"\n    }}>{`4. 引导式内容生成`}</h3>\n    <p>{`引导式则将是通过一些面向用户的标准提问（Prompts），引导用户将需求清晰描述出来，然后用 GPT 生成格式化的输出，并由低代码引擎完成渲染。`}</p>\n    <p>{`和通过 GPT 生成文字和图片不同，代码平台对于 GPT 生成的内容的「准确度」和「结构化」程度要求更高，意味着对 GPT 模型的领域定制也会更深入。`}</p>\n    <p>{`来自杭州本地的创业公司 myBricks 低代码平台已经有了一定的雏形：`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://mp.weixin.qq.com/s/7tzC2_DVaTro7Q0mkXGCzA\"\n      }}>{`https://mp.weixin.qq.com/s/7tzC2_DVaTro7Q0mkXGCzA`}</a></p>\n    <p>{`以目前自研中的 TARS 低代码平台为例，一段页面级别的 schema 定义如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\",\n        \"data-language\": \"json\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"componentName\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Root\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"children\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token property\\\">\\\"componentName\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Form\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token property\\\">\\\"props\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"layout\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"horizontal\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"disabled\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"style\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token property\\\">\\\"children\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token property\\\">\\\"componentName\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"FormItem\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token property\\\">\\\"props\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token property\\\">\\\"label\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"名字\\\"</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token property\\\">\\\"children\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n            <span class=\\\"token punctuation\\\">{</span>\\n              <span class=\\\"token property\\\">\\\"componentName\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Input\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n              <span class=\\\"token property\\\">\\\"props\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token property\\\">\\\"placeholder\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"请输入\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"value\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"\\\"</span>\\n              <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n              <span class=\\\"token property\\\">\\\"x-field\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"string\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"value\\\"</span>\\n              <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n          <span class=\\\"token punctuation\\\">]</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">]</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`理论上后续基于大模型推理能力和大量的数据训练，生成针对 TARS 页面搭建的模型能力，就能直接通过录入这样一段 schema 来完成页面的搭建。`}</p>\n    <h2 {...{\n      \"id\": \"总结\"\n    }}>{`总结`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`低代码 和 GPT 可以相互融合，GPT 更适合通过插件集成的方式，进一步降低平台的开发成本；`}</li>\n      <li parentName=\"ol\">{`已有的模型推理服务，可以直接在低代码平台使用；`}</li>\n      <li parentName=\"ol\">{`GPT 对于一些结构化、模板化开发场景（sql、文档生成、测试用例）有潜在的优化可能；`}</li>\n      <li parentName=\"ol\">{`GPT 和工作流场景天然匹配，补齐了低代码平台自定义交互的天然缺陷；`}</li>\n      <li parentName=\"ol\">{`GPT 结合 Prompt 能够快速生成低代码 schema，但需要深度模型定制。`}</li>\n    </ol>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"背景\",\n    level: 2,\n    title: \"背景\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"低代码和-ai-的关系\",\n    level: 2,\n    title: \"低代码和 AI 的关系\",\n    children: [\n        {\n              id: \"1-ai-推理服务\",\n              level: 3,\n              title: \"1. AI 推理服务\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"2-sql-查询\",\n              level: 3,\n              title: \"2. sql 查询\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"3-工作流\",\n              level: 3,\n              title: \"3. 工作流\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"4-引导式内容生成\",\n              level: 3,\n              title: \"4. 引导式内容生成\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"总结\",\n    level: 2,\n    title: \"总结\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}