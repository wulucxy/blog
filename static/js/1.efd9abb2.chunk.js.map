{"version":3,"sources":["components/TagIndexPage.module.css","components/TagPage.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/TagIndexPage.js","components/TagPage.js","utils/getTagsFromSiteMap.js","routes/tags.js"],"names":["module","exports","TagIndexPage","TagPage","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","props","React","createElement","className","styles","tags","map","tag","key","href","Link","name","count","_ref","blogRoot","routes","route","url","ArticleSummary","getTagsFromSiteMap","siteMap","Object","values","from","Set","concat","apply","data","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","tagRoutes","compose","withContext","req","_objectSpread","tagsRoot","mountpath","mount","/","title","getView","_getView","_asyncToGenerator","_callee","_context","router","resolveSiteMap","predicate","chunk","pathname","indexOf","fromPairs","toLowerCase","join","_x","_x2","arguments","/:tag","getTitle","params","_getView2","_callee2","lowerCaseTag","_context2","entries","_ref2","find","metaTag","_x3","_x4"],"mappings":"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","file":"static/js/1.efd9abb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TagIndexPage\":\"TagIndexPage_TagIndexPage__2b8OA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TagPage\":\"TagPage_TagPage__2-BQ_\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from 'react'\nimport { Link } from 'react-navi'\nimport styles from './TagIndexPage.module.css'\n\nfunction TagIndexPage(props) {\n  return (\n    <div className={styles.TagIndexPage}>\n      <h1>Tags</h1>\n      <ul>\n        {props.tags.map(tag =>\n          <li key={tag.href}>\n            <Link href={tag.href}>{tag.name} ({tag.count})</Link>\n          </li>  \n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default TagIndexPage","import React from 'react'\nimport ArticleSummary from './ArticleSummary'\nimport styles from './TagPage.module.css'\n\nfunction TagPage({ blogRoot, name, routes }) {\n  return (\n    <div className={styles.TagPage}>\n      <h1>{name} posts</h1>\n      <ul>\n        {routes.map(route =>\n          <li key={route.url.href}>\n            <ArticleSummary blogRoot={blogRoot} route={route} />\n          </li>  \n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default TagPage","/**\n * Returns an object mapping the URL of each of the site's pages to it's `title`\n * and `meta` objects.\n *\n * This object can be computed at runtime given a `router`, or read from a\n * global `pageDetailsMap` object. This allows for access to the page map during\n * development, while also allowing production builds to use a prebuilt copy.\n */\nfunction getTagsFromSiteMap(siteMap) {\n  let routes = Object.values(siteMap.routes)\n  return Array.from(\n    new Set(\n      [].concat.apply(\n        [],\n        routes.map(route => (route.data && route.data.tags) || []),\n      ),\n    ),\n  )\n}\n\nexport default getTagsFromSiteMap\n","import React from 'react'\nimport { compose, mount, route, withContext } from 'navi'\nimport { join } from 'path'\nimport { fromPairs } from 'lodash'\nimport TagIndexPage from '../components/TagIndexPage'\nimport TagPage from '../components/TagPage'\nimport getTagsFromSiteMap from '../utils/getTagsFromSiteMap'\n\nconst tagRoutes = compose(\n  withContext((req, context) => ({\n    ...context,\n    tagsRoot: req.mountpath,\n  })),\n  mount({\n    '/': route({\n      title: 'Tags',\n\n      getView: async (req, context) => {\n        // Build a list of pages for each tag\n        let siteMap = await req.router.resolveSiteMap(context.blogRoot, {\n          predicate: chunk =>\n            chunk.url.pathname.indexOf(context.tagsRoot) === -1,\n        })\n        let tags = getTagsFromSiteMap(siteMap)\n        let tagRoutes = fromPairs(tags.map(name => [name.toLowerCase(), []]))\n        Object.values(siteMap.routes).forEach((route) => {\n          let data = route.data\n          if (data && data.tags) {\n            data.tags.forEach(tag => {\n              tag = tag.toLowerCase()\n              if (tagRoutes[tag]) {\n                tagRoutes[tag].push(route)\n              }\n            })\n          }\n        })\n\n        return (\n          <TagIndexPage\n            blogRoot={context.blogRoot}\n            tags={tags.map(name => ({\n              name,\n              href: join(req.mountpath, name.toLowerCase()),\n              count: (tagRoutes[name] || []).length,\n            }))}\n          />\n        )\n      },\n    }),\n\n    '/:tag': route({\n      getTitle: req => req.params.tag,\n      getView: async (req, context) => {\n        let lowerCaseTag = req.params.tag.toLowerCase()\n\n        // Build a list of pages that include the tag from the site map\n        let siteMap = await req.router.resolveSiteMap(context.blogRoot, {\n          predicate: chunk =>\n            chunk.url.pathname.indexOf(context.tagsRoot) === -1,\n        })\n        let routes = []\n        Object.entries(siteMap.routes).forEach(([_, route]) => {\n          let tags = (route.data && route.data.tags) || []\n          if (tags.find(metaTag => metaTag.toLowerCase() === lowerCaseTag)) {\n            routes.push(route)\n          }\n        })\n\n        return (\n          <TagPage\n            blogRoot={context.blogRoot}\n            name={req.params.tag}\n            routes={routes}\n          />\n        )\n      },\n    }),\n  }),\n)\n\nexport default tagRoutes\n"],"sourceRoot":""}