{"version":3,"sources":["routes/posts/2019-04-26-webkit-structure/document.mdx"],"names":["readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","Object","assign","mdxType","parentName","id","src","alt","align","href","isMDXComponent","tableOfContents","arguments","length","undefined","level","title","children","frontMatter"],"mappings":"qTAGaA,EAAc,CAACC,KAAO,aAAaC,QAAU,KAAKC,KAAO,MAAOC,MAAQ,KAM/EC,EAAc,GAGdC,EAAY,UACH,SAASC,EAAUC,GAG/B,IAFDC,EAAUD,EAAVC,WACGC,EAAKC,YAAAH,EAAAI,GAER,OAAOC,YAACP,EAASQ,OAAAC,OAAA,GAAKV,EAAiBK,EAAK,CAAED,WAAYA,EAAYO,QAAQ,cAC5EH,YAAA,kBACEA,YAAA,KAAGI,WAAW,cAAY,mDAE5BJ,YAAA,MACEK,GAAM,sBAAoB,uBAE5BL,YAAA,UACEA,YAAA,MAAII,WAAW,MAAI,mDAErBJ,YAAA,SAAGA,YAAA,OAAKI,WAAW,IACfE,IAAO,mHACPC,IAAO,yBAEXP,YAAA,UACEA,YAAA,MAAII,WAAW,MAAI,uFAAkCJ,YAAA,UAAQI,WAAW,MAAI,8CAA8C,yBAE5HJ,YAAA,MACEK,GAAM,kCAAO,kCAEfL,YAAA,SAAGA,YAAA,OAAKI,WAAW,IACfE,IAAO,8GACPC,IAAO,sBAEXP,YAAA,aACEA,YAAA,SAAOI,WAAW,SAChBJ,YAAA,MAAII,WAAW,SACbJ,YAAA,MAAII,WAAW,KACbI,MAAS,MAAI,wBAEfR,YAAA,MAAII,WAAW,KACbI,MAAS,MAAI,kBAInBR,YAAA,SAAOI,WAAW,SAChBJ,YAAA,MAAII,WAAW,SACbJ,YAAA,MAAII,WAAW,KACbI,MAAS,MAAI,WAEfR,YAAA,MAAII,WAAW,KACbI,MAAS,MAAI,wQAGjBR,YAAA,MAAII,WAAW,SACbJ,YAAA,MAAII,WAAW,KACbI,MAAS,MAAI,YAEfR,YAAA,MAAII,WAAW,KACbI,MAAS,MAAI,iCAGjBR,YAAA,MAAII,WAAW,SACbJ,YAAA,MAAII,WAAW,KACbI,MAAS,MAAI,UAEfR,YAAA,MAAII,WAAW,KACbI,MAAS,MAAI,2DAGjBR,YAAA,MAAII,WAAW,SACbJ,YAAA,MAAII,WAAW,KACbI,MAAS,MAAI,OAEfR,YAAA,MAAII,WAAW,KACbI,MAAS,MAAI,+DAKrBR,YAAA,UACEA,YAAA,MAAII,WAAW,MAAI,gGACjBJ,YAAA,MAAII,WAAW,MACbJ,YAAA,MAAII,WAAW,MAAI,8HACnBJ,YAAA,MAAII,WAAW,MAAI,4KAIzBJ,YAAA,MACEK,GAAM,4BAAM,4BAEdL,YAAA,SAAGA,YAAA,OAAKI,WAAW,IACfE,IAAO,qHACPC,IAAO,YAEXP,YAAA,8GACAA,YAAA,MACEK,GAAM,gBAAI,sBAEZL,YAAA,UACEA,YAAA,MAAII,WAAW,MACbJ,YAAA,KAAGI,WAAW,MAAI,6BAEpBJ,YAAA,MAAII,WAAW,MACbJ,YAAA,KAAGI,WAAW,MAAI,4BAClBJ,YAAA,MAAII,WAAW,MACbJ,YAAA,MAAII,WAAW,MAAI,kLACnBJ,YAAA,MAAII,WAAW,MAAI,qLAGvBJ,YAAA,MAAII,WAAW,MACbJ,YAAA,KAAGI,WAAW,MAAI,4BAClBJ,YAAA,MAAII,WAAW,MACbJ,YAAA,MAAII,WAAW,MACbJ,YAAA,KAAGI,WAAW,MAAI,2BAEpBJ,YAAA,MAAII,WAAW,MACbJ,YAAA,KAAGI,WAAW,MAAI,6BAEpBJ,YAAA,MAAII,WAAW,MACbJ,YAAA,KAAGI,WAAW,MAAI,uDAK1BJ,YAAA,SAAGA,YAAA,OAAKI,WAAW,IACfE,IAAO,6GACPC,IAAO,mBAEXP,YAAA,UACEA,YAAA,MAAII,WAAW,MACbJ,YAAA,KAAGI,WAAW,MAAI,4EAClBJ,YAAA,MAAII,WAAW,MACbJ,YAAA,MAAII,WAAW,MAAI,4EAGvBJ,YAAA,MAAII,WAAW,MACbJ,YAAA,KAAGI,WAAW,MAAI,8CAEpBJ,YAAA,MAAII,WAAW,MACbJ,YAAA,KAAGI,WAAW,MAAI,4BAClBJ,YAAA,MAAII,WAAW,MACbJ,YAAA,MAAII,WAAW,MAAI,kDAGvBJ,YAAA,MAAII,WAAW,MACbJ,YAAA,KAAGI,WAAW,MAAI,6FAClBJ,YAAA,MAAII,WAAW,MACbJ,YAAA,MAAII,WAAW,MAAI,qFAIzBJ,YAAA,MACEK,GAAM,kBAAgB,kBAExBL,YAAA,kBACEA,YAAA,KAAGI,WAAW,cAAY,gMAE5BJ,YAAA,SAAGA,YAAA,UAAQI,WAAW,KAAG,kBAA4B,sQACrDJ,YAAA,0HAAoDA,YAAA,KAAGI,WAAW,IAC9DK,KAAQ,oFAAkF,6BAE9FT,YAAA,MACEK,GAAM,yDAAyB,yDAEjCL,YAAA,SAAGA,YAAA,OAAKI,WAAW,IACfE,IAAO,6GACPC,IAAO,sBAEXP,YAAA,UACEA,YAAA,MAAII,WAAW,MAAI,2KACnBJ,YAAA,MAAII,WAAW,MAAI,uEAErBJ,YAAA,MACEK,GAAM,WAAS,WAEjBL,YAAA,UACEA,YAAA,MAAII,WAAW,MAAI,0EACnBJ,YAAA,MAAII,WAAW,MAAI,8DAAmBJ,YAAA,cAAYI,WAAW,MAAI,UAAwB,uBACzFJ,YAAA,MAAII,WAAW,MAAI,4BAErBJ,YAAA,kBACEA,YAAA,KAAGI,WAAW,cAAaJ,YAAA,cAAYI,WAAW,KAAG,YAA0B,wGACnFJ,YAAA,cAAYI,WAAW,KAAG,wBAAsC,oJAE9DJ,YAAA,MACEK,GAAM,sBAAU,sBAElBL,YAAA,SAAGA,YAAA,OAAKI,WAAW,IACfE,IAAO,kHACPC,IAAO,oBAEXP,YAAA,MACEK,GAAM,UAAQ,UAEhBL,YAAA,mPACAA,YAAA,SAAGA,YAAA,OAAKI,WAAW,IACfE,IAAO,2GACPC,IAAO,YAEXP,YAAA,MACEK,GAAM,SAAO,SAEfL,YAAA,4KACAA,YAAA,SAAGA,YAAA,OAAKI,WAAW,IACfE,IAAO,0GACPC,IAAO,mBAEXP,YAAA,UACEA,YAAA,MAAII,WAAW,MAAI,+DAErBJ,YAAA,SAAGA,YAAA,OAAKI,WAAW,IACfE,IAAO,6GACPC,IAAO,6BAEXP,YAAA,UACEA,YAAA,MAAII,WAAW,MAAI,uFAErBJ,YAAA,SAAGA,YAAA,OAAKI,WAAW,IACfE,IAAO,8GACPC,IAAO,6BAEXP,YAAA,oIACAA,YAAA,SAAGA,YAAA,OAAKI,WAAW,IACfE,IAAO,wGACPC,IAAO,6BAEXP,YAAA,MACEK,GAAM,4BAAgB,4BAExBL,YAAA,SAAGA,YAAA,OAAKI,WAAW,IACfE,IAAO,gHACPC,IAAO,0BAEXP,YAAA,sLAAwEA,YAAA,MAAII,WAAW,KAAG,qBAA2B,wKAErHJ,YAAA,6KAA8EA,YAAA,KAAGI,WAAW,IACxFK,KAAQ,mIAAiI,+DAE7IT,YAAA,kBACEA,YAAA,KAAGI,WAAW,cAAY,0IAE5BJ,YAAA,MACEK,GAAM,wDAAc,wDAEtBL,YAAA,qCAAYA,YAAA,KAAGI,WAAW,IACtBK,KAAQ,8EAA4E,+EAExFT,YAAA,UACEA,YAAA,MAAII,WAAW,MAAI,mIACnBJ,YAAA,MAAII,WAAW,MAAI,qHAErBJ,YAAA,0EACFA,YAAA,KAAGI,WAAW,IACRK,KAAQ,2KAAyK,uCAErLT,YAAA,MACEK,GAAM,4BAAM,4BAEdL,YAAA,UACEA,YAAA,MAAII,WAAW,MAAKJ,YAAA,KAAGI,WAAW,KAC9BK,KAAQ,0EAAwE,wCACjE,KACnBT,YAAA,MAAII,WAAW,MAAKJ,YAAA,KAAGI,WAAW,KAC9BK,KAAQ,0GAAwG,yDAEpHT,YAAA,MAAII,WAAW,MAAKJ,YAAA,KAAGI,WAAW,KAC9BK,KAAQ,8EAA4E,gCAExFT,YAAA,MAAII,WAAW,MAAKJ,YAAA,KAAGI,WAAW,KAC9BK,KAAQ,yDAAuD,sCAMzEf,EAAWgB,gBAAiB,EACrB,IAAMC,EAAkB,WAAWC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAG,MAAK,CAChD,CACEP,GAAI,qBACJU,MAAO,EACPC,MAAO,sBACPC,SAAU,IAId,CACIZ,GAAI,iCACJU,MAAO,EACPC,MAAO,iCACPC,SAAU,IAId,CACIZ,GAAI,2BACJU,MAAO,EACPC,MAAO,2BACPC,SAAU,CACN,CACMZ,GAAI,eACJU,MAAO,EACPC,MAAO,qBACPC,SAAU,IAIlB,CACQZ,GAAI,iBACJU,MAAO,EACPC,MAAO,iBACPC,SAAU,MAMxB,CACIZ,GAAI,wDACJU,MAAO,EACPC,MAAO,wDACPC,SAAU,CACN,CACMZ,GAAI,UACJU,MAAO,EACPC,MAAO,UACPC,SAAU,IAIlB,CACQZ,GAAI,qBACJU,MAAO,EACPC,MAAO,qBACPC,SAAU,IAIlB,CACQZ,GAAI,SACJU,MAAO,EACPC,MAAO,SACPC,SAAU,IAIlB,CACQZ,GAAI,QACJU,MAAO,EACPC,MAAO,QACPC,SAAU,IAIlB,CACQZ,GAAI,2BACJU,MAAO,EACPC,MAAO,2BACPC,SAAU,IAIlB,CACQZ,GAAI,uDACJU,MAAO,EACPC,MAAO,uDACPC,SAAU,MAMxB,CACIZ,GAAI,2BACJU,MAAO,EACPC,MAAO,2BACPC,SAAU,MAMDC,EAAc","file":"static/js/19.b9e850ea.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"5 min read\",\"minutes\":4.35,\"time\":261000,\"words\":870}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <blockquote>\n      <p parentName=\"blockquote\">{`来自网友 @cukunbu 原创`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"process-and-thread\"\n    }}>{`Process and Thread.`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`thread 是 process 的一部分`}</li>\n    </ul>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://github.com/wulucxy/blog/raw/master/src/routes/posts/2019-04-26-webkit-structure/image/process-thread.png\",\n        \"alt\": \"process and threads\"\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\">{`可以开启多个 process，process 之间通过  `}<strong parentName=\"li\">{`IPC（Inter Process Communication）`}</strong>{`  交互。`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"浏览器架构\"\n    }}>{`浏览器架构`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://github.com/wulucxy/blog/raw/master/src/routes/posts/2019-04-26-webkit-structure/image/browserui.png\",\n        \"alt\": \"Chrome processes\"\n      }}></img></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`process 类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`内容`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Browser`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`1. chrome 应用。包含 address bar, bookmarks, back and forward buttons. 2. 还处理Web浏览器的不可见特权部分，例如网络请求和文件访问。`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Renderer`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`tab 内容展示`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Plugin`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`浏览器插件，比如 flash`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`GPU`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`处理其他 process 的 GPU 任务`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <ul>\n      <li parentName=\"ul\">{`每个 Tab/iframe 会运行一个独立的 render process。`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`独立 render process 可以当某个 Tab 崩溃，其他 Tab 正常工作`}</li>\n          <li parentName=\"ul\">{`独立 render process 保证了每个 iframe 访问的数据必须满足 same origin(同源政策) 。`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"页面跳转\"\n    }}>{`页面跳转`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://github.com/wulucxy/blog/raw/master/src/routes/posts/2019-04-26-webkit-structure/image/browserprocesses.png\",\n        \"alt\": \"thread\"\n      }}></img></p>\n    <p>{`从 browser process 开始，包含 UI thread / Network thread / storage thread`}</p>\n    <h3 {...{\n      \"id\": \"步骤\"\n    }}>{`步骤：`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`输入网址`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`回车确认`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`UI thread 初始化请求， network thread 查询 DNS / 建立 TLS 连接。此时 UI thread 使 tab 转圈圈。`}</li>\n          <li parentName=\"ul\">{`这个过程中 network thread 与 UI thread 会相互通信，比如301，network 会让 UI thread 重新请求`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`接收请求`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`MIME-TYPE 校验`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`跨域校验`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`根据 MIME-TYPE 渲染数据`}</p>\n          </li>\n        </ul>\n      </li>\n    </ul>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://github.com/wulucxy/blog/raw/master/src/routes/posts/2019-04-26-webkit-structure/image/response.png\",\n        \"alt\": \"HTTP response\"\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`如果请求是 HTML ，则渲染页面`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`UI thread 寻找对应的 renderer process 渲染`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`renderer process 执行渲染`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`渲染完成`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`render process 通知 browser process `}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`如果有新的 url 输入，页面需要跳转`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`browser process 通知 render process 处理 unloaded 事件`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"service-worker\"\n    }}>{`service worker`}</h3>\n    <blockquote>\n      <p parentName=\"blockquote\">{`service worker 会对 network 做代理，允许用户选择读取 cache 还是发送请求获取新数据。`}</p>\n    </blockquote>\n    <p><strong parentName=\"p\">{`service worker`}</strong>{` 是 js 脚本，在 render process 中运行。但是 network thread 存在在 browser process 中，browser process 要如何知晓 render process 中存在 service worker 呢？`}</p>\n    <p>{`注册 service worker 时，会在 Network thread 中留下引用值。`}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/web/fundamentals/primers/service-workers/lifecycle\"\n      }}>{`相关链接`}</a></p>\n    <h2 {...{\n      \"id\": \"renderer-process-处理页面渲染\"\n    }}>{`renderer process 处理页面渲染`}</h2>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://github.com/wulucxy/blog/raw/master/src/routes/posts/2019-04-26-webkit-structure/image/renderer.png\",\n        \"alt\": \"Renderer process\"\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\">{`Main thread 会处理大部分内容，包括 parsing / style 计算 / layout 构建 / paint 操作/ js 执行`}</li>\n      <li parentName=\"ul\">{`composition 则在单独的 compositor 执行`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"parsing\"\n    }}>{`parsing`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`解析 DOM。对错误处理友好。`}</li>\n      <li parentName=\"ul\">{`可以边解析 DOM，边请求 `}<inlineCode parentName=\"li\">{`<img/>`}</inlineCode>{` 等资源`}</li>\n      <li parentName=\"ul\">{`js 会 block parsing`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\"><inlineCode parentName=\"p\">{`<script>`}</inlineCode>{` 标签添加 async / defer。这样不会阻断主流程\n`}<inlineCode parentName=\"p\">{`<link rel=\"preload\">`}</inlineCode>{` 添加 preload 标志，告诉浏览器你希望这个资源能尽快下载.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"style-计算\"\n    }}>{`style 计算`}</h3>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://github.com/wulucxy/blog/raw/master/src/routes/posts/2019-04-26-webkit-structure/image/computedstyle.png\",\n        \"alt\": \"computed style\"\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"layout\"\n    }}>{`Layout`}</h3>\n    <p>{`浏览器会构建一个与 DOM 树类似的树，展示 x, y, width, height 信息。伪类元素也会在这个阶段应用。`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://github.com/wulucxy/blog/raw/master/src/routes/posts/2019-04-26-webkit-structure/image/layout.png\",\n        \"alt\": \"layout\"\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"paint\"\n    }}>{`paint`}</h3>\n    <p>{`在这个阶段还需计算组件的 order。Layout 树会被遍历产生一个 Paint Record.`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://github.com/wulucxy/blog/raw/master/src/routes/posts/2019-04-26-webkit-structure/image/paint.png\",\n        \"alt\": \"paint records\"\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\">{`以 pipeline 的方式进行更新`}</li>\n    </ul>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://github.com/wulucxy/blog/raw/master/src/routes/posts/2019-04-26-webkit-structure/image/pipeline.png\",\n        \"alt\": \"image-20190422224904804\"\n      }}></img></p>\n    <ul>\n      <li parentName=\"ul\">{`js 也在 main thread 中进行，会阻碍渲染`}</li>\n    </ul>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://github.com/wulucxy/blog/raw/master/src/routes/posts/2019-04-26-webkit-structure/image/pagejank2.png\",\n        \"alt\": \"jage jank by JavaScript\"\n      }}></img></p>\n    <p>{`可以将 js 操作颗粒化，可以使用 requestAnimationFrame() / web worker`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://github.com/wulucxy/blog/raw/master/src/routes/posts/2019-04-26-webkit-structure/image/raf.png\",\n        \"alt\": \"request animation frame\"\n      }}></img></p>\n    <h3 {...{\n      \"id\": \"compositing-合成\"\n    }}>{`compositing 合成`}</h3>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"https://github.com/wulucxy/blog/raw/master/src/routes/posts/2019-04-26-webkit-structure/image/compositing.gif\",\n        \"alt\": \"Apr-25-2019_23-01-04\"\n      }}></img></p>\n    <p>{`compositing 则是将 page 分成不同的 layer, 对每个 layer 都进行 raster(光栅化)，然后在  `}<em parentName=\"p\">{`compositor thread`}</em>{` 上合成(composition).\n页面滚动时因为 layer 都已经 raster 完成，只需要合成。`}</p>\n    <p>{`composition 会根据 Layout tree, 构建一棵 layer tree。不是一个Element 一个layer, 具体如下 `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/web/fundamentals/performance/rendering/stick-to-compositor-only-properties-and-manage-layer-count\"\n      }}>{`Stick to Compositor-Only Properties and Manage Layer Count`}</a></p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`compositing 不在 main thread 上完成，不需要等待  style 计算、js 执行.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"css-对各个阶段的影响\"\n    }}>{`CSS 对各个阶段的影响`}</h3>\n    <p>{`详情见： `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.html5rocks.com/en/tutorials/speed/high-performance-animations/\"\n      }}>{`https://www.html5rocks.com/en/tutorials/speed/high-performance-animations/`}</a></p>\n    <ul>\n      <li parentName=\"ul\">{`transform 与 opacity 会在compositor thread 中处理，不会影响主线程。`}</li>\n      <li parentName=\"ul\">{`回流(reflows) 影响了 layout，重绘(repaint) 影响了 paint 过程`}</li>\n    </ul>\n    <p>{`如何减少回流与重绘：\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.zhangxinxu.com/wordpress/2010/01/%E5%9B%9E%E6%B5%81%E4%B8%8E%E9%87%8D%E7%BB%98%EF%BC%9Acss%E6%80%A7%E8%83%BD%E8%AE%A9javascript%E5%8F%98%E6%85%A2%EF%BC%9F/\"\n      }}>{`ZXX 回流与重绘`}</a></p>\n    <h2 {...{\n      \"id\": \"参考文献\"\n    }}>{`参考文献`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://developers.google.com/web/updates/2018/09/inside-browser-part1\"\n        }}>{`本文英文原文`}</a>{` `}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://blog.logrocket.com/eliminate-content-repaints-with-the-new-layers-panel-in-chrome-e2c306d4d752\"\n        }}>{`eliminate-content-repaints-with-the-new-layers-panel`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.html5rocks.com/en/tutorials/speed/high-performance-animations/\"\n        }}>{`high-performance-animations`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.html5rocks.com/zh/tutorials/speed/layers/\"\n        }}>{`Accelerated Rendering in Chrome`}</a></li>\n    </ul>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"process-and-thread\",\n    level: 2,\n    title: \"Process and Thread.\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"浏览器架构\",\n    level: 2,\n    title: \"浏览器架构\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"页面跳转\",\n    level: 2,\n    title: \"页面跳转\",\n    children: [\n        {\n              id: \"步骤\",\n              level: 3,\n              title: \"步骤：\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"service-worker\",\n              level: 3,\n              title: \"service worker\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"renderer-process-处理页面渲染\",\n    level: 2,\n    title: \"renderer process 处理页面渲染\",\n    children: [\n        {\n              id: \"parsing\",\n              level: 3,\n              title: \"parsing\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"style-计算\",\n              level: 3,\n              title: \"style 计算\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"layout\",\n              level: 3,\n              title: \"Layout\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"paint\",\n              level: 3,\n              title: \"paint\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"compositing-合成\",\n              level: 3,\n              title: \"compositing 合成\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"css-对各个阶段的影响\",\n              level: 3,\n              title: \"CSS 对各个阶段的影响\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"参考文献\",\n    level: 2,\n    title: \"参考文献\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}