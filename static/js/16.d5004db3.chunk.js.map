{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","routes/posts/2018-08-15-you-dont-know-react/document.mdx"],"names":["_classCallCheck","instance","Constructor","TypeError","__webpack_require__","d","__webpack_exports__","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_typeof2","obj","Symbol","iterator","constructor","_typeof","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_setPrototypeOf","p","_inherits","subClass","superClass","create","value","readingTime","text","minutes","time","words","MDXContent","_React$Component","_this","this","layout","_this$props","components","_objectWithoutProperties","React","createElement","MDXTag","name","parentName","src","alt","id","href","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","Component","tableOfContents","arguments","undefined","level","title","children","frontMatter"],"mappings":"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","file":"static/js/16.d5004db3.chunk.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","\nimport React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\nexport const readingTime = {\"text\":\"13 min read\",\"minutes\":12.755,\"time\":765300,\"words\":2551}\n\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`注：本文写于 2018 年，基于 react 15 的一些实践分享，部分内容已经不太符合目前 react 16 的架构，请谨慎采纳`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://github.com/wulucxy/blog/raw/master/src/routes/posts/2018-08-15-you-dont-know-react/image/graphic.png\",\"alt\":\"react-graphic\"}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`React 上手很简单，初次接触 React 的同学花半天时间差不多就能看完 React 官网文档。但要真正掌握 React 是一个漫长的过程，React 真正的威力在于其背后庞大繁荣的生态圈，redux、react-router、mobX、create-react-app、GraphQL 等，你要学习的不是一个库，也不是一个框架，而是一整套技术栈，和完整的 React 的思维方式。 `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`本文不介绍 React 基础知识，也不介绍 React 库 的具体用法，我会分享一些 React 实战开发中的 ”令人眼前一亮“ 的案例，希望能够对你有一定的启发。当然如果你有更好的 case 分享，欢迎评论。`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"1-component\"}}>{`1. Component`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`React 有三种组件构建方式：`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`React.Component`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`React.pureComponent`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`stateless Component`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`这三种组件区别可以参考 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://reactjs.org/docs/components-and-props.html\"}}>{`官方文档`}</MDXTag>{`，这里要聊得是如何选择组件类型：`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`通常我们可以按照以下逻辑来确定组件应用场景：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>componentHasNoState<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n <span class=\\\"token comment\\\">// 1. 如果组件不需要维护应用状态，选择 stateless Component</span>\\n <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">itsStatelessComponent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>componentHasSimplePropsState <span class=\\\"token operator\\\">&amp;&amp;</span> propsHasNoNestedObjects<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n <span class=\\\"token comment\\\">// 2. 如果组件属性简单，并且不含有嵌套数据，选择 pureComponent</span>\\n <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">itsPureComponent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n <span class=\\\"token comment\\\">// 3. 其他情况选择 Component</span>\\n <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">itsComponent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`补充：`}</MDXTag>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`React.pureComponent 对于高响应组件（Input 等）也不建议使用，每次比较props有性能消耗。`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"2-refs\"}}>{`2. refs`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`React 通过声明式的渲染机制把复杂 DOM 操作简化为 state 和 props 操作，但某些特场景，我们仍然离不开 DOM 操作和跨组件调用，React 开放了 ref 属性可以方便我们操作 DOM 和 调用其他组件实例。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`React `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://reactjs.org/docs/refs-and-the-dom.html\"}}>{`创建 ref 有三种方式`}</MDXTag>{`：`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`string 类型 ref - `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`deprecated，不推荐使用`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`callback ref - 推荐使用`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`React.createRef() - `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`React 16 后添加，推荐使用`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`ref 使用有几点需要特别注意：`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`stateless 组件上无法直接使用，因为stateless 组件无实例`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">MyFunctionalComponent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>input <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Parent</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>textInput <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 错误，无状态组件没有实例</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token operator\\\">&lt;</span>MyFunctionalComponent ref<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>textInput<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`stateless 组件内部可以使用 ref`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">CustomTextInput</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// ref 需要在组件初始化就创建</span>\\n  <span class=\\\"token keyword\\\">let</span> textInput <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">handleClick</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 无状态组件内部可以创建ref</span>\\n    textInput<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">focus</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>input\\n        type<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"text\\\"</span>\\n        ref<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>textInput<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n\\n      <span class=\\\"token operator\\\">&lt;</span>input\\n        type<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"button\\\"</span>\\n        value<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"Focus the text input\\\"</span>\\n        onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>handleClick<span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`innerRef 跨组件调用`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`当我们需要在父组件上拿到子组件的 DOM 元素时，我们可以传递一个自定义 innerRef 直接从父组件上拿到子组件的 DOM 元素：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">CustomTextInput</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>input ref<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>props<span class=\\\"token punctuation\\\">.</span>innerRef<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Parent</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function-variable function\\\">_setRef</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">el</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>inputElement <span class=\\\"token operator\\\">=</span> el\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token operator\\\">&lt;</span>CustomTextInput\\n        innerRef<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_setRef<span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`ref 在 HOC 中传递`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`ref 属性类似于 key, 本质是给 React 内部使用的，无法通过 props 进行传递。在 HOC 高阶组件内部，ref 往往不能正确获得内部实例，类似于 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/reduxjs/react-redux/blob/d769be59dafde13cee509185f1bab385b90dd9e7/src/components/connectAdvanced.js#L179-L189\"}}>{`react-redux 实现`}</MDXTag>{`，我们需要对组件增加 getWrappedInstance 和 setWrappedInstance 方法：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token constant\\\">HOC</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">WrappedComponent</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">HOCComponent</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>    \\n    <span class=\\\"token comment\\\">// 提供对外实例的方法</span>\\n    <span class=\\\"token function-variable function\\\">getWrappedInstance</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>wrappedInstance<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token comment\\\">// 实现 ref 的访问</span>\\n    <span class=\\\"token function-variable function\\\">setWrappedInstance</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">ref</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>wrappedInstance <span class=\\\"token operator\\\">=</span> ref<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    \\n    <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>WrappedComponent ref<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>setWrappedInstance<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> HOCComponent<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> App <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">HOC</span><span class=\\\"token punctuation\\\">(</span>Wrap<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token operator\\\">&lt;</span>App ref<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">comp</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// 只能获取到 HOCComponent</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>comp<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token comment\\\">// 通过中转后可以获取到 WrappedComponent</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>comp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getWrappedInstance</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`穿云箭 React.forwardRef`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`React 16 可以通过 React.forwardRef 更加方便地从父组件传递 ref 到子组件，`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`ForwardRef`}</MDXTag>{` 字面意思就是 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`forward(传递)ref`}</MDXTag>{`。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`我们对上面定义的 HOC 高阶组件做一个改造：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token constant\\\">HOC</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">WrappedComponent</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">HOCComponent</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>   \\n    <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>forwardRef<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>rest<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>WrappedComponent ref<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>forwardRef<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span>rest<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forwardRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props<span class=\\\"token punctuation\\\">,</span> ref</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>HOCComponent forwardRef<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>ref<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span>props<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> App <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">HOC</span><span class=\\\"token punctuation\\\">(</span>Wrap<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token operator\\\">&lt;</span>App ref<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">comp</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// 此时就能直接拿到内部组件实例了</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>comp<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"3-react-router-支持路由动态布局\"}}>{`3. React-Router 支持路由动态布局`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`一个复杂的单页应用往往有不止一种 页面布局 展示，比如 A 页面布局是：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token operator\\\">&lt;</span>Header<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token operator\\\">&lt;</span>Asider<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token operator\\\">&lt;</span>Main<span class=\\\"token operator\\\">></span>\\n<span class=\\\"token operator\\\">&lt;</span>Footer<span class=\\\"token operator\\\">></span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`B 页面的布局是：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token operator\\\">&lt;</span>Header<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token operator\\\">&lt;</span>Main<span class=\\\"token operator\\\">></span>\\n<span class=\\\"token operator\\\">&lt;</span>Footer<span class=\\\"token operator\\\">></span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`我们希望实现根据页面路由自定义页面布局展现。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`在单一页面布局下，我们通常是这么架构应用路由：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token operator\\\">&lt;</span>Layout<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token operator\\\">&lt;</span>Switch<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span>Route<span class=\\\"token operator\\\">></span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`为了支持动态 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`layout`}</MDXTag>{` 布局能力，就无法再沿用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Layout`}</MDXTag>{` 嵌套 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Route`}</MDXTag>{` 来实现，我们希望能够实现 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Route`}</MDXTag>{` 嵌套 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Layout`}</MDXTag>{`：`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`类似于：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token operator\\\">&lt;</span>Route <span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span>props<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token operator\\\">&lt;</span>Layout <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`这样就可以实现动态路由布局能力了。`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`react-router`}</MDXTag>{` 提供了 `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://reacttraining.com/react-router/web/api/Route/render-func\"}}>{`render`}</MDXTag>{` 方法来自定义`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Route`}</MDXTag>{`组件。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`对 Route 稍加改写就可以支持了：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">BaseRoute</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token literal-property property\\\">component</span><span class=\\\"token operator\\\">:</span> Component<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>rest<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>Route <span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span>rest<span class=\\\"token punctuation\\\">}</span> render<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token parameter\\\">matchProps</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token operator\\\">&lt;</span>BaseLayout<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>Component <span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span>matchProps<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>BaseLayout<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`于是我们在外部调用即可：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token operator\\\">&lt;</span>Router<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token operator\\\">&lt;</span>Switch<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>BaseRoute path<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">'/guide'</span> exact component<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>QuickStart<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>WithoutSideBarRoute path<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">'/demo'</span> exact component<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>Demo<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>Redirect to<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">'/guide'</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n   <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Switch<span class=\\\"token operator\\\">></span>\\n<span class=\\\"token operator\\\">&lt;</span>Router<span class=\\\"token operator\\\">></span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`这样我们就可以将`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Router`}</MDXTag>{`和`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`Layout`}</MDXTag>{`组合起来，衍生出各种布局能力了。`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"4-单页应用-pv-统计\"}}>{`4. 单页应用 PV 统计`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`传统页面 PV 统计是基于页面之间链接跳转实现，但在单页应用里页内路由替代了请求新的页面，PV 统计只在应用初始化才会触发，这就意味着我们需要新的单页应用 PV 统计方案。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`我们有两种方式来实现 PV 统计：`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`监听 hashChange 变化上报 PV`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`基于 decorate 装饰 Route 组件，每次参数变更上报 PV`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`第 1 种方案很好实现，在路由文件上侦听 hashChange 事件即可`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token function-variable function\\\">hashChangeHandle</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  ReactGA<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pageview</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>location<span class=\\\"token punctuation\\\">.</span>pathname<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>location<span class=\\\"token punctuation\\\">.</span>search<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token function\\\">componentDidMount</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addEventListener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'hashchange'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>hashChangeHandler<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token function\\\">componentWillUnmount</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">removeEventListener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'hashchange'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>hashChangeHandler<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`第二种方案的本质是当路由组件参数变更时，意味着此时路由 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`path`}</MDXTag>{` 参数变更，直接监听 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`componentWillReiveProps`}</MDXTag>{` 就能实现 PV 上报。我们需要一个装饰器方法将路由组件包装好。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">withRouter</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">WrappedComponent</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">extends</span> React<span class=\\\"token punctuation\\\">.</span>PureComponent <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function-variable function\\\">trackData</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>location<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> props\\n      <span class=\\\"token comment\\\">// 上报PV</span>\\n      ReactGA<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pageview</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>location<span class=\\\"token punctuation\\\">.</span>pathname<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>location<span class=\\\"token punctuation\\\">.</span>search<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token function\\\">componentDidMount</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// 初始化也要上报PV</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">trackData</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token function\\\">componentWillReceiveProps</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// 每次路由参数变更上报PV</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">trackData</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token function\\\">render</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">&lt;</span>WrappedComponent <span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`在外面调用就很简单了，将 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`BaseRoute`}</MDXTag>{` 包装一层即可。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`// ....BaseRoute 原有逻辑\nexport default withRouter()(BaseRoute)\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"5-权限控制\"}}>{`5. 权限控制`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`权限控制是中后台系统的核心功能之一，权限控制一般分为页面粒度和页面元素粒度。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`当我们需要对页面元素粒度进行权限控制时，譬如我们需要页面上 button 按钮根据是否有权限，来控制展示或隐藏：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"data-language\":\"jsx\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token function\\\">render</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>code<span class=\\\"token punctuation\\\">,</span> resouceList<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props\\n  <span class=\\\"token keyword\\\">let</span> hasAuth <span class=\\\"token operator\\\">=</span> resouceList<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">includes</span><span class=\\\"token punctuation\\\">(</span>code<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token punctuation\\\">{</span>hasAuth <span class=\\\"token operator\\\">?</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">创建用户</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    \\n  <span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`一个元素这么写当然没问题，但是如果有 10 个元素需要加权限控制，或者按钮的显示逻辑修改了呢，我们需要一个更加通用的解决办法。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`我们可以创建一个组件容器组件专门负责管理权限：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">AuthContainer</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> resourceList<span class=\\\"token punctuation\\\">,</span> children<span class=\\\"token punctuation\\\">,</span> code <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> hasAuth <span class=\\\"token operator\\\">=</span> resourceList<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">includes</span><span class=\\\"token punctuation\\\">(</span>code<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">return</span> hasAuth <span class=\\\"token operator\\\">&amp;&amp;</span> children\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`然后将上面的组件改写一下：`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token function\\\">render</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>code<span class=\\\"token punctuation\\\">,</span> resouceList<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>AuthContainer code<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>code<span class=\\\"token punctuation\\\">}</span> resouceList<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>resouceList<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>button<span class=\\\"token operator\\\">></span>创建用户<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>AuthContainer<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`重构完的代码无论是从语义性，还是扩展性都有很大的提升。`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"6-currying-react\"}}>{`6. currying React`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`currying 柯里化是函数式语言基础的写法，通俗化来说就是把多个参数的函数变换成接受一个个单一参数的函数，并且在最后返回新函数。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`也广泛应用在 React 及其周边库的写法中，像常用`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`react-redux`}</MDXTag>{` 中 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`connect(mapStateToProps, mapDispatchToProps)(App)`}</MDXTag>{` 就是标准的柯里化写法。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`以下举个栗子来阐释柯里化在 React 开发中的实践：`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`多个过滤条件合并`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`现在有一个case，我们分别需要针对 price、age、brand 三个维度过滤筛选产品列表`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token comment\\\">// 通常实现</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Filters</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// 更新价格条件</span>\\n  <span class=\\\"token function-variable function\\\">updatePriceFilter</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">newValue</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">selectionsChanged</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token operator\\\">...</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>filterSelections<span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token literal-property property\\\">price</span><span class=\\\"token operator\\\">:</span> newValue\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  \\n  <span class=\\\"token comment\\\">// 更新年龄条件</span>\\n  <span class=\\\"token function-variable function\\\">updateAgeFilter</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">newValue</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">selectionsChanged</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token operator\\\">...</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>filterSelections<span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token literal-property property\\\">ages</span><span class=\\\"token operator\\\">:</span> newValue\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  \\n  <span class=\\\"token comment\\\">// 更新品牌条件</span>\\n  <span class=\\\"token function-variable function\\\">updateBrandFilter</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">newValue</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">selectionsChanged</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token operator\\\">...</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>filterSelections<span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token literal-property property\\\">brands</span><span class=\\\"token operator\\\">:</span> newValue\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  \\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>PriceFilter \\n          priceChanged<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>updatePriceFilter<span class=\\\"token punctuation\\\">}</span> \\n        <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>AgeFilter \\n          agesChanged<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>updateAgeFilter<span class=\\\"token punctuation\\\">}</span> \\n        <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>BrandFilter \\n          brandsChanged<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>updateBrandFilter<span class=\\\"token punctuation\\\">}</span> \\n        <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`我们发现，三个过滤方法除了过滤条件不一样，其他代码逻辑几乎一样，如果后续再增加一个过滤条件，我们几乎是需要再拷贝一遍代码，这不科学。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"<span class=\\\"token comment\\\">// 柯里化实现</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Filters</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// 合并过滤条件</span>\\n  <span class=\\\"token function-variable function\\\">updateSelections</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">selectionType</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">newValue</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n     <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">selectionsChanged</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token operator\\\">...</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>filterSelections<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">[</span>selectionType<span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">:</span> newValue<span class=\\\"token punctuation\\\">,</span>\\n     <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>PriceFilter \\n          priceChanged<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">updateSelections</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'price'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span> \\n        <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>AgeFilter \\n          agesChanged<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">updateSelections</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span> \\n        <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>BrandFilter \\n          brandsChanged<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">updateSelections</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'brand'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span> \\n        <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`很明显，柯里化改造后的代码大大简化了代码逻辑，也增强后续扩展性。`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"blockquote\" components={components} parentName=\"blockquote\">\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`更新 `}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`目前这种实现方式，还是会导致每次重新创建匿名方法，应该通过如下方式，才能避免文中所说的匿名方法重复创建问题：`}</MDXTag>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`updateSelectionsPrice = updateSelections(’price’)`}</MDXTag>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`updateSelectionsAge = updateSelections(’age’)`}</MDXTag>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`updateSelectionsBrand = updateSelections(’brand’)`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"7-recompose-让生活更美好\"}}>{`7. recompose 让生活更美好`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/acdlite/recompose/blob/master/docs/API.md\"}}>{`recompose`}</MDXTag>{` 是一个优秀的 React 社区开源库，提供了一系列小而美的高阶组件和工具类方法，可以看成是 React 的 lodash。`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`pure：可以将函数式组件实现 PureComponent 的能力，减少重复渲染`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`withProps: 给组件添加属性，譬如可以将当前页面的路由信息、一些需要计算的信息作为属性注入到组件`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`withPropsOnChange: 类似于withProps, 当时只有当传入组件发生变更才会重新计算属性注入到组件中`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`defaultProps：添加默认属性（常用于公共属性的提取和添加）`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`setPropTypes：设置属性类型（常用于公共属性设置）`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`compose：将多个高阶组件组合起来`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\",\"data-language\":\"javascript\",\"data-highlighted-line-numbers\":\"\",\"dangerouslySetInnerHTML\":{\"__html\":\"composedHoc <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">compose</span><span class=\\\"token punctuation\\\">(</span>hoc1<span class=\\\"token punctuation\\\">,</span> hoc2<span class=\\\"token punctuation\\\">,</span> hoc3<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>App<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\">// 实际上等于</span>\\n<span class=\\\"token function\\\">hoc1</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">hoc2</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">hoc3</span><span class=\\\"token punctuation\\\">(</span>App<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n\"}}}></MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`希望 recompose 同样能够成为你开发的得力助手。`}</MDXTag>\n           </MDXTag>\n  }\n}\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"1-component\",\n    level: 3,\n    title: \"1. Component\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"2-refs\",\n    level: 3,\n    title: \"2. refs\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"3-react-router-支持路由动态布局\",\n    level: 3,\n    title: \"3. React-Router 支持路由动态布局\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"4-单页应用-pv-统计\",\n    level: 3,\n    title: \"4. 单页应用 PV 统计\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"5-权限控制\",\n    level: 3,\n    title: \"5. 权限控制\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"6-currying-react\",\n    level: 3,\n    title: \"6. currying React\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"7-recompose-让生活更美好\",\n    level: 3,\n    title: \"7. recompose 让生活更美好\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}