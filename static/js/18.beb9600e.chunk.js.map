{"version":3,"sources":["routes/posts/2018-12-28-react-element/document.mdx"],"names":["readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","Object","assign","mdxType","parentName","id","align","className","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","href","isMDXComponent","tableOfContents","arguments","length","undefined","level","title","React","Fragment","MDXTag","name","children","frontMatter"],"mappings":"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","file":"static/js/18.beb9600e.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"4 min read\",\"minutes\":3.71,\"time\":222600,\"words\":742}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <blockquote>\n      <p parentName=\"blockquote\">{`来自网友 @chongya 原创`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"1-reactelement\"\n    }}>{`1. `}<inlineCode parentName=\"h2\">{`ReactElement`}</inlineCode></h2>\n    <p><inlineCode parentName=\"p\">{`ReactElement`}</inlineCode>{` 是构建 `}<inlineCode parentName=\"p\">{`React`}</inlineCode>{` 应用的`}<strong parentName=\"p\">{`最小单元`}</strong>{`。`}</p>\n    <p><inlineCode parentName=\"p\">{`ReactElement`}</inlineCode>{` 是 `}<inlineCode parentName=\"p\">{`React`}</inlineCode>{` 用来描述真实 `}<inlineCode parentName=\"p\">{`DOM`}</inlineCode>{` 元素的制造出来的 `}<inlineCode parentName=\"p\">{`js`}</inlineCode>{` 对象，其主要属性如下表：`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`key`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Key / null`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`元素唯一标识`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string / ComponentType`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`元素类型（字符串代表 `}<inlineCode parentName=\"td\">{`DOM Element`}</inlineCode>{`，函数和类代表 `}<inlineCode parentName=\"td\">{`Component Element`}</inlineCode>{`）`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`props`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`元素属性集合`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`完整的定义为：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"type Key <span class=\\\"token operator\\\">=</span> string <span class=\\\"token operator\\\">|</span> number<span class=\\\"token punctuation\\\">;</span>\\ntype ComponentType<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">=</span> ComponentClass<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">|</span> StatelessComponent<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ReactElement</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token literal-property property\\\">key</span><span class=\\\"token operator\\\">:</span> Key <span class=\\\"token operator\\\">|</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token literal-property property\\\">type</span><span class=\\\"token operator\\\">:</span> string <span class=\\\"token operator\\\">|</span> ComponentType<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token literal-property property\\\">props</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">P</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"11-domelement\"\n    }}>{`1.1 `}<inlineCode parentName=\"h3\">{`DOMElement`}</inlineCode></h3>\n    <p>{`当 `}<inlineCode parentName=\"p\">{`ReactElement.type`}</inlineCode>{` 为 `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{` 时候，`}<inlineCode parentName=\"p\">{`ReactElement`}</inlineCode>{` 可看作 `}<inlineCode parentName=\"p\">{`DOMElement`}</inlineCode>{`，`}<inlineCode parentName=\"p\">{`DOMElement`}</inlineCode>{` 的定义如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">DOMElement</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">HTMLAttributes</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">|</span> SVGAttributes<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">T</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Element</span><span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">ReactElement</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token literal-property property\\\">type</span><span class=\\\"token operator\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token literal-property property\\\">ref</span><span class=\\\"token operator\\\">:</span> Ref<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p><inlineCode parentName=\"p\">{`DOMElement`}</inlineCode>{` 又分为两大类 `}<inlineCode parentName=\"p\">{`ReactHTMLElement`}</inlineCode>{` 和 `}<inlineCode parentName=\"p\">{`ReactSVGElement`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ReactHTMLElement</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">HTMLElement</span><span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">DetailedReactHTMLElement</span><span class=\\\"token operator\\\">&lt;</span>AllHTMLAttributes<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">DetailedReactHTMLElement</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">HTMLAttributes</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">T</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">HTMLElement</span><span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">DOMElement</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token literal-property property\\\">type</span><span class=\\\"token operator\\\">:</span> keyof ReactHTML<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n  \\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ReactSVGElement</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">DOMElement</span><span class=\\\"token operator\\\">&lt;</span>SVGAttributes<span class=\\\"token operator\\\">&lt;</span>SVGElement<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> SVGElement<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token literal-property property\\\">type</span><span class=\\\"token operator\\\">:</span> keyof ReactSVG<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"12-componentelement--sfcelement\"\n    }}>{`1.2 `}<inlineCode parentName=\"h3\">{`ComponentElement`}</inlineCode>{` & `}<inlineCode parentName=\"h3\">{`SFCElement`}</inlineCode></h3>\n    <p><inlineCode parentName=\"p\">{`ReactElement.type`}</inlineCode>{` 类型为 `}<inlineCode parentName=\"p\">{`string | ComponentType`}</inlineCode>{`，其中 `}<inlineCode parentName=\"p\">{`ComponentType`}</inlineCode>{` 的类型定义如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"type ComponentType<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">=</span> ComponentClass<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">|</span> StatelessComponent<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ComponentClass`}</inlineCode>{`:\n`}<inlineCode parentName=\"li\">{`ComponentClass`}</inlineCode>{` 即代表 `}<inlineCode parentName=\"li\">{`class`}</inlineCode>{` 类型的组件，它有自己的构造函数 `}<inlineCode parentName=\"li\">{`Component`}</inlineCode>{`， `}<inlineCode parentName=\"li\">{`ComponentClass`}</inlineCode>{` 定义如下：`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// 基本 ComponentClass</span>\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ComponentClass</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">new</span> <span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">P</span><span class=\\\"token punctuation\\\">,</span> context<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> any<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> Component<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token punctuation\\\">,</span> ComponentState<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n  propTypes<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> ValidationMap<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n  contextTypes<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> ValidationMap<span class=\\\"token operator\\\">&lt;</span>any<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n  childContextTypes<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> ValidationMap<span class=\\\"token operator\\\">&lt;</span>any<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n  defaultProps<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> Partial<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n  displayName<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// ClassicComponentClass 继承自 ComponentClass</span>\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ClassicComponentClass</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">ComponentClass</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">new</span> <span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">P</span><span class=\\\"token punctuation\\\">,</span> context<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> any<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> ClassicComponent<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token punctuation\\\">,</span> ComponentState<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n  getDefaultProps<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">P</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`由 `}<inlineCode parentName=\"p\">{`ComponentClass`}</inlineCode>{` 构造出来的 `}<inlineCode parentName=\"p\">{`ReactElement`}</inlineCode>{` 叫做 `}<inlineCode parentName=\"p\">{`ComponentElement`}</inlineCode>{`，定义如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ComponentElement</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">T</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token punctuation\\\">,</span> ComponentState<span class=\\\"token operator\\\">>></span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">ReactElement</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token literal-property property\\\">type</span><span class=\\\"token operator\\\">:</span> ComponentClass<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n  ref<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> Ref<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`StatelessComponent`}</inlineCode>{`:\n`}<inlineCode parentName=\"li\">{`StatelessComponent`}</inlineCode>{` 即无状态组件，简称 `}<inlineCode parentName=\"li\">{`SFC`}</inlineCode>{`，定义如下：`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"type <span class=\\\"token constant\\\">SFC</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">=</span> StatelessComponent<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">StatelessComponent</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">P</span> <span class=\\\"token operator\\\">&amp;</span> <span class=\\\"token punctuation\\\">{</span> children<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> ReactNode <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> context<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> any<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> ReactElement<span class=\\\"token operator\\\">&lt;</span>any<span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n  propTypes<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> ValidationMap<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n  contextTypes<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> ValidationMap<span class=\\\"token operator\\\">&lt;</span>any<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n  defaultProps<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> Partial<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n  displayName<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`由 `}<inlineCode parentName=\"p\">{`SFC`}</inlineCode>{` 构造出来的 `}<inlineCode parentName=\"p\">{`ReactElement`}</inlineCode>{` 叫做 `}<inlineCode parentName=\"p\">{`SFCElement`}</inlineCode>{`，定义如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">SFCElement</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">ReactElement</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token literal-property property\\\">type</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">SFC</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`可以看出，与 `}<inlineCode parentName=\"p\">{`DOMElement`}</inlineCode>{` 与 `}<inlineCode parentName=\"p\">{`ComponentElement`}</inlineCode>{` 相比，`}<inlineCode parentName=\"p\">{`SFCElement`}</inlineCode>{` 不含 `}<inlineCode parentName=\"p\">{`ref`}</inlineCode></p>\n    <h2 {...{\n      \"id\": \"2-component\"\n    }}>{`2. `}<inlineCode parentName=\"h2\">{`Component`}</inlineCode></h2>\n    <p><inlineCode parentName=\"p\">{`Component`}</inlineCode>{` 继承自 `}<inlineCode parentName=\"p\">{`ComponentLifecycle`}</inlineCode>{`（组件生命周期），同时通过 `}<inlineCode parentName=\"p\">{`Component`}</inlineCode>{` 又派生出 `}<inlineCode parentName=\"p\">{`PureComponent`}</inlineCode>{` 和 `}<inlineCode parentName=\"p\">{`ClassicComponent`}</inlineCode>{`，定义如下：`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ComponentLifecycle</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">S</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  componentWillMount<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n  componentDidMount<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n  componentWillReceiveProps<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">(</span>nextProps<span class=\\\"token operator\\\">:</span> Readonly<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token literal-property property\\\">nextContext</span><span class=\\\"token operator\\\">:</span> any<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n  shouldComponentUpdate<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">(</span>nextProps<span class=\\\"token operator\\\">:</span> Readonly<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token literal-property property\\\">nextState</span><span class=\\\"token operator\\\">:</span> Readonly<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">S</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token literal-property property\\\">nextContext</span><span class=\\\"token operator\\\">:</span> any<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> boolean<span class=\\\"token punctuation\\\">;</span>\\n  componentWillUpdate<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">(</span>nextProps<span class=\\\"token operator\\\">:</span> Readonly<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token literal-property property\\\">nextState</span><span class=\\\"token operator\\\">:</span> Readonly<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">S</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token literal-property property\\\">nextContext</span><span class=\\\"token operator\\\">:</span> any<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n  componentDidUpdate<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">(</span>prevProps<span class=\\\"token operator\\\">:</span> Readonly<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token literal-property property\\\">prevState</span><span class=\\\"token operator\\\">:</span> Readonly<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">S</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token literal-property property\\\">prevContext</span><span class=\\\"token operator\\\">:</span> any<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n  componentWillUnmount<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Component</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">S</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">ComponentLifecycle</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">S</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Component</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">S</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">constructor</span><span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">P</span><span class=\\\"token punctuation\\\">,</span> context<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> any<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    setState<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">K</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">keyof</span> <span class=\\\"token constant\\\">S</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token literal-property property\\\">state</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token literal-property property\\\">prevState</span><span class=\\\"token operator\\\">:</span> Readonly<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">S</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token literal-property property\\\">props</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">P</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>Pick<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">S</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">K</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token constant\\\">S</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token punctuation\\\">(</span>Pick<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">S</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">K</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token constant\\\">S</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n      callback<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> any\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token function\\\">forceUpdate</span><span class=\\\"token punctuation\\\">(</span>callBack<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> any<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">JSX</span><span class=\\\"token punctuation\\\">.</span>Element <span class=\\\"token operator\\\">|</span> <span class=\\\"token keyword\\\">null</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token literal-property property\\\">props</span><span class=\\\"token operator\\\">:</span> Readonly<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token punctuation\\\">{</span> children<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> ReactNode <span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&amp;</span> Readonly<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token literal-property property\\\">state</span><span class=\\\"token operator\\\">:</span> Readonly<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">S</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token literal-property property\\\">context</span><span class=\\\"token operator\\\">:</span> any<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token literal-property property\\\">refs</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token punctuation\\\">[</span>key<span class=\\\"token operator\\\">:</span> string<span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">:</span> ReactInstance\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">PureComponent</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">S</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">S</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ClassicComponent</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">S</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">P</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constant\\\">S</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">replaceState</span><span class=\\\"token punctuation\\\">(</span>nextState<span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">S</span><span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> any<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">isMounted</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> boolean<span class=\\\"token punctuation\\\">;</span>\\n  getInitialState<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">S</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"3-reactinstance\"\n    }}>{`3. `}<inlineCode parentName=\"h2\">{`ReactInstance`}</inlineCode></h2>\n    <p><inlineCode parentName=\"p\">{`ReactInstance`}</inlineCode>{` 既可以是 `}<inlineCode parentName=\"p\">{`Component`}</inlineCode>{` 的实例，也可以是一个 `}<inlineCode parentName=\"p\">{`Element`}</inlineCode>{`（最基础的元素）`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"type ReactInstance <span class=\\\"token operator\\\">=</span> Component<span class=\\\"token operator\\\">&lt;</span>any<span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">|</span> Element\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"4-reactnode\"\n    }}>{`4. `}<inlineCode parentName=\"h2\">{`ReactNode`}</inlineCode></h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"type ReactText <span class=\\\"token operator\\\">=</span> string <span class=\\\"token operator\\\">|</span> number<span class=\\\"token punctuation\\\">;</span>\\ntype ReactChild <span class=\\\"token operator\\\">=</span> ReactElement<span class=\\\"token operator\\\">&lt;</span>any<span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">|</span> ReactText<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ReactNodeArray</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Array</span><span class=\\\"token operator\\\">&lt;</span>ReactNode<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\ntype ReactFragment <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">|</span> ReactNodeArray<span class=\\\"token punctuation\\\">;</span>\\n\\ntype ReactNode <span class=\\\"token operator\\\">=</span> ReactChild <span class=\\\"token operator\\\">|</span> ReactFragment <span class=\\\"token operator\\\">|</span> boolean <span class=\\\"token operator\\\">|</span> <span class=\\\"token keyword\\\">null</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token keyword\\\">undefined</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"5-syntheticevent\"\n    }}>{`5. `}<inlineCode parentName=\"h2\">{`SyntheticEvent`}</inlineCode></h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\",\n        \"data-language\": \"javascript\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">SyntheticEvent</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token constant\\\">T</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token literal-property property\\\">bubbles</span><span class=\\\"token operator\\\">:</span> boolean<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token literal-property property\\\">currentTarget</span><span class=\\\"token operator\\\">:</span> EventTarget <span class=\\\"token operator\\\">&amp;</span> <span class=\\\"token constant\\\">T</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token literal-property property\\\">cancelable</span><span class=\\\"token operator\\\">:</span> boolean<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token literal-property property\\\">defaultPrevented</span><span class=\\\"token operator\\\">:</span> boolean<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token literal-property property\\\">eventPhase</span><span class=\\\"token operator\\\">:</span> number<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token literal-property property\\\">isTrusted</span><span class=\\\"token operator\\\">:</span> boolean<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token literal-property property\\\">nativeEvent</span><span class=\\\"token operator\\\">:</span> Event<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">preventDefault</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">isDefaultPrevented</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> boolean<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">stopPropagation</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">isPropagationStopped</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> boolean<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">persist</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">void</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token literal-property property\\\">target</span><span class=\\\"token operator\\\">:</span> EventTarget<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token literal-property property\\\">timeStamp</span><span class=\\\"token operator\\\">:</span> number<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token literal-property property\\\">type</span><span class=\\\"token operator\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`参考资料：`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/react/v15/index.d.ts\"\n        }}>{`https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/react/v15/index.d.ts`}</a></p>\n    </blockquote>\n    <blockquote>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/react/global.d.ts\"\n        }}>{`https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/react/global.d.ts`}</a></p>\n    </blockquote>\n    <blockquote>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/react/index.d.ts\"\n        }}>{`https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/react/index.d.ts`}</a></p>\n    </blockquote>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"1-reactelement\",\n    level: 2,\n    title: <React.Fragment>{`1. `}<MDXTag name=\"inlineCode\" components={components}>{`ReactElement`}</MDXTag></React.Fragment>,\n    children: [\n        {\n              id: \"11-domelement\",\n              level: 3,\n              title: <React.Fragment>{`1.1 `}<MDXTag name=\"inlineCode\" components={components}>{`DOMElement`}</MDXTag></React.Fragment>,\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"12-componentelement--sfcelement\",\n              level: 3,\n              title: <React.Fragment>{`1.2 `}<MDXTag name=\"inlineCode\" components={components}>{`ComponentElement`}</MDXTag>{` & `}<MDXTag name=\"inlineCode\" components={components}>{`SFCElement`}</MDXTag></React.Fragment>,\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"2-component\",\n    level: 2,\n    title: <React.Fragment>{`2. `}<MDXTag name=\"inlineCode\" components={components}>{`Component`}</MDXTag></React.Fragment>,\n    children: [\n        \n      ]\n  },\n{\n    id: \"3-reactinstance\",\n    level: 2,\n    title: <React.Fragment>{`3. `}<MDXTag name=\"inlineCode\" components={components}>{`ReactInstance`}</MDXTag></React.Fragment>,\n    children: [\n        \n      ]\n  },\n{\n    id: \"4-reactnode\",\n    level: 2,\n    title: <React.Fragment>{`4. `}<MDXTag name=\"inlineCode\" components={components}>{`ReactNode`}</MDXTag></React.Fragment>,\n    children: [\n        \n      ]\n  },\n{\n    id: \"5-syntheticevent\",\n    level: 2,\n    title: <React.Fragment>{`5. `}<MDXTag name=\"inlineCode\" components={components}>{`SyntheticEvent`}</MDXTag></React.Fragment>,\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}